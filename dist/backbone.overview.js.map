{"version":3,"sources":["../backbone.overview.js"],"names":[],"mappings":"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","file":"backbone.overview.js","sourcesContent":["/*!\n * Backbone.Overview \n *\n * Copyright (c) 2018, JC Brand <jc@opkode.com>\n * Licensed under the Mozilla Public License (MPL) \n */\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define([\"underscore\", \"backbone\"], factory);\n   } else {\n      // RequireJS isn't being used.\n      // Assume underscore and backbone are loaded in <script> tags\n        factory(_ || root._, Backbone || root.Backbone);\n   }\n}(this, function (_, Backbone) {\n    \"use strict\";\n\n    const View = _.isUndefined(Backbone.NativeView) ? Backbone.View : Backbone.NativeView;\n\n    const Overview = Backbone.Overview = function (options) {\n        /* An Overview is a View that contains and keeps track of sub-views.\n         * Kind of like what a Collection is to a Model.\n         */\n        var that = this;\n        this.views = {};\n        this.keys = _.partial(_.keys, this.views);\n        this.getAll = _.partial(_.identity, this.views);\n\n        this.get = function (id) {\n            return that.views[id];\n        };\n\n        this.xget = function (id) {\n            /* Exclusive get. Returns all instances except the given id. */\n            return _.filter(that.views, function (view, vid) {\n                return vid !== id;\n            });\n        };\n\n        this.add = function (id, view) {\n            that.views[id] = view;\n            return view;\n        };\n\n        this.remove = function (id) {\n            if (typeof id === \"undefined\") {\n                new View().remove.apply(that);\n            }\n            var view = that.views[id];\n            if (view) {\n                delete that.views[id];\n                view.remove();\n                return view;\n            }\n        };\n\n        this.removeAll = function () {\n            _.each(_.keys(that.views), that.remove);\n            return that;\n        };\n        View.apply(this, Array.prototype.slice.apply(arguments));\n    };\n\n    var methods = [\n        'all', 'any', 'chain', 'collect', 'contains', 'detect',\n        'difference', 'drop', 'each', 'every', 'filter', 'find',\n        'first', 'foldl', 'foldr', 'forEach', 'head', 'include',\n        'indexOf', 'initial', 'inject', 'invoke', 'isEmpty',\n        'last', 'lastIndexOf', 'map', 'max', 'min', 'reduce',\n        'reduceRight', 'reject', 'rest', 'sample', 'select',\n        'shuffle', 'size', 'some', 'sortBy', 'tail', 'take',\n        'toArray', 'without',\n    ];\n    // Mix in each Underscore method as a proxy to `Overview#view`.\n    _.each(methods, function(method) {\n        Overview.prototype[method] = function() {\n            var args = Array.prototype.slice.call(arguments);\n            args.unshift(this.views);\n            return _[method].apply(_, args);\n        };\n    });\n    _.extend(Overview.prototype, View.prototype);\n    Overview.extend = View.extend;\n\n\n    Backbone.OrderedListView = Backbone.Overview.extend({\n\n        // The `listItems` attribute denotes the path (from this View) to the\n        // list of items.\n        listItems: 'model',\n        // The `sortEvent` attribute specifies the event which should cause the\n        // ordered list to be sorted.\n        sortEvent: 'change',\n        // The `listSelector` is the selector used to query for the DOM list\n        // element which contains the ordered items.\n        listSelector: '.ordered-items',\n        // The `itemView` is constructor which should be called to create a\n        // View for a new item.\n        ItemView: undefined,\n\n        initialize () {\n            this.sortEventually = _.debounce(this.sortAndPositionAllItems.bind(this), 500);\n            this.items = _.get(this, this.listItems);\n            this.items.on('add', this.createItemView, this);\n            this.items.on('add', this.sortEventually, this);\n            this.items.on(this.sortEvent, this.sortEventually, this);\n        },\n\n        createItemView (item) {\n            let item_view = this.get(item.get('id'));\n            if (!item_view) {\n                item_view = new this.ItemView({model: item});\n                this.add(item.get('id'), item_view);\n            } else {\n                item_view.model = item;\n                item_view.initialize();\n            }\n            item_view.render();\n            return item_view;\n        },\n\n\n        sortAndPositionAllItems () {\n            this.items.sort();\n            this.items.each((item) => {\n                if (_.isUndefined(this.get(item.get('id')))) {\n                    this.createItemView(item)\n                }\n                this.positionItem(item, this.el.querySelector(this.listSelector));\n            });\n        },\n\n        positionItem (item, list_el) {\n            /* Place the View's DOM element in the correct alphabetical\n             * position in the list.\n             *\n             * IMPORTANT: there's an important implicit assumption being\n             * made here. And that is that initially this method gets called\n             * for each item in the right positional order.\n             *\n             * In other words, it gets called for the 0th, then the\n             * 1st, then the 2nd, 3rd and so on.\n             *\n             * That's why we call it in the \"success\" handler after\n             * fetching the items, so that we know we have ALL of\n             * them and that they're sorted.\n             */\n            const view = this.get(item.get('id')),\n                index = this.items.indexOf(item);\n\n            if (index === 0) {\n                list_el.insertAdjacentElement('afterbegin', view.el);\n            } else if (index === (this.items.length-1)) {\n                list_el.insertAdjacentElement('beforeend', view.el);\n            } else {\n                const neighbour_el = list_el.querySelector('li:nth-child('+index+')');\n                neighbour_el.insertAdjacentElement('afterend', view.el);\n            }\n            return view;\n        }\n    });\n\n    return Backbone.Overview;\n}));\n"]}